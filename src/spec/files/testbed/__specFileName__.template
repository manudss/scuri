<% params.forEach(p => { if(p.importPath) {%>import { <%= p.type %> } from '<%= p.importPath %>';
<% }}) %>import { <%= className %> } from './<%= normalizedName %>';
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { autoSpy } from 'autoSpy';

/**
 * Test with test Bed -
 */
describe('<%= className %>', () => {

    it('should create', () => {
        // GIVEN - arrange
        const { build } = setup().default();
        const component = build();

        // WHEN - act

        // THEN - assert
        expect(component).toBeTruthy();
    }); 

  <% publicMethods.forEach(meth=> { %>it('when <%= meth %> is called it should', () => {
    // GIVEN - arrange
    const { build } = setup().default();
    const component = build();

    // WHEN - act
    const <%= meth %> = component.<%= meth %>();

    // THEN - assert
    // const <%= meth %>Expected = {};
    // expect(<%= meth %>).toEqual(<%= meth %>Expected);
  });

  <% }) %>
});

function setup() {
  <%= declaration %>
    let component: <%= className %>;
    let fixture: ComponentFixture<<%= className %>>;
  const builder = {
    <%= builderExports %>
    component,
    fixture,
    default() {
        TestBed.configureTestingModule({
            declarations: [<%= className %>],
            providers: [<%= provider %>]
        }).compileComponents();

      return builder;
    },
    build() {
        fixture = TestBed.createComponent(<%= className %>);
        component = fixture.componentInstance;
        fixture.detectChanges();

        return component;
    }
  };

  return builder;
}
